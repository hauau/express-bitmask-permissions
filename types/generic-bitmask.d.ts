/** Declaration file generated by dts-gen */

export class Descriptor {
    constructor(values: any);

    add(values: any, bitmask: any): any;

    compoundMaskOf(names: any): any;

    compoundValueOf(names: any): any;

    compoundValueOfAll(): any;

    defined(name: any, lazy: any): any;

    extract(mask: any): any;

    remove(values: any, bitmask: any): any;

    set(names: any): any;

    validate(values: any, bitmask: any): any;

    valueOf(name: any): any;

}

export class Mask {
    constructor(value: any);

    add(item: any): any;

    get(): any;

    has(value: any): any;

    remove(item: any): any;

    set(value: any): any;

    test(item: any): any;

}

export namespace Descriptor {
    namespace descriptor {
        function add(values: any, bitmask: any): any;

        function compoundMaskOf(names: any): any;

        function compoundValueOf(names: any): any;

        function compoundValueOfAll(): any;

        function defined(name: any, lazy: any): any;

        function extract(mask: any): any;

        function remove(values: any, bitmask: any): any;

        function set(names: any): any;

        function validate(values: any, bitmask: any): any;

        function valueOf(name: any): any;

        namespace add {
            const prototype: {
            };

        }

        namespace compoundMaskOf {
            const prototype: {
            };

        }

        namespace compoundValueOf {
            const prototype: {
            };

        }

        namespace compoundValueOfAll {
            const prototype: {
            };

        }

        namespace defined {
            const prototype: {
            };

        }

        namespace extract {
            const prototype: {
            };

        }

        namespace remove {
            const prototype: {
            };

        }

        namespace set {
            const prototype: {
            };

        }

        namespace validate {
            const prototype: {
            };

        }

        namespace valueOf {
            const prototype: {
            };

        }

    }

}

export namespace Mask {
    namespace mask {
        function add(item: any): any;

        function get(): any;

        function has(value: any): any;

        function remove(item: any): any;

        function set(value: any): any;

        function test(item: any): any;

        namespace add {
            const prototype: {
            };

        }

        namespace get {
            const prototype: {
            };

        }

        namespace has {
            const prototype: {
            };

        }

        namespace remove {
            const prototype: {
            };

        }

        namespace set {
            const prototype: {
            };

        }

        namespace test {
            const prototype: {
            };

        }

    }

    namespace translate {
        const prototype: {
        };

    }

}

